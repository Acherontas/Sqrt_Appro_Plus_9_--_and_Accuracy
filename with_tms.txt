voyeristic behaviours and other have fun. Opoios klefei prepei na plironei 
OPOS PARAKALISTHE NA MIN PIGAINE TO PONTIKI STOY DIAOLOY TIN MANA
GIA NA MOY VGAZETE TO MATI. Eyxaristo 
warning values are approximation of the original calculated sqrt value method 
some +-z values from [1-9] will be missing 
intended to find the approximate beginning in order to search with the dot comma starting from a value 
for example from 27.00 and increasing to 27.99 to find the result u want 
me seira: [1] number, 
|[2] 1 gia block foron,[3] fores * 81 | , 
|| [4] 1 gia akrivi ipologismo,[5] epilogi arithmou ,[6]dekadikos akrivi ipologismou ||  ,
 [7] 1 gia emfanisi allon arithmon || [8] dekadikos akrivi ipologismou_fast_mode , [9] diafora akeraion  || [10] fast_mode_state 
 [11] enter precision
[1]=number 
[2]=0 i 1 gia energopoiisi foron
[3]=oi fores px 4 * 81
[4]=0 i 1 gia times stin x_s function 
[12]=0 i 1 gia log
[13]=0 i 1 gia adv_log
an example ./sqrt_arm64    [1]   [2] [3] [4] [5]  [6]    [7] [8] [9] [10] [11] [12] [13] 
or         ./sqrt_arm64 7889562   1   52  1   0   0.01    0   0   0   1    30    1   1   

ur log level [12] 0
ur precision is [11]30
ur advance log of 9 [13] 1
ur number u want to check is [1] 2147483647
ur sqrt value is : 46340.94921875
ur k /81 number is : 26512143.7901234567901234567901
abs difference of k-y: 26512143.7901234567901234567901 - 46340.94921875 ::== 26465802
suggested value of difference for the gap is : 572.110484182098765432098765432 use the integer part 
the other incredible way is 327310 with sqrt of 572.110107421875
z is [2] 1
tms is [3]52
ur new k /81 * 52 is 4212 and k is 509848.919040835707502374169041

calculating backward to find the 327310 ~ 
@i 0 @k 509848.919040835707502374169041 with ^ 259945920247.108643655038875045
@i 1 @k 509839.919040835707502374169041 with ^ 259936743047.56590861230383231
@i 2 @k 509830.919040835707502374169041 with ^ 259927566010.023173569568789575
@i 3 @k 509821.919040835707502374169041 with ^ 259918389134.48043852683374684
@i 4 @k 509812.919040835707502374169041 with ^ 259909212420.937703484098704105
@i 5 @k 509803.919040835707502374169041 with ^ 259900035869.39496844136366137
@i 6 @k 509794.919040835707502374169041 with ^ 259890859479.852233398628618635
@i 7 @k 509785.919040835707502374169041 with ^ 259881683252.3094983558935759
@i 8 @k 509776.919040835707502374169041 with ^ 259872507186.766763313158533165
@i 9 @k 509767.919040835707502374169041 with ^ 259863331283.22402827042349043
@i 10 @k 509758.919040835707502374169041 with ^ 259854155541.681293227688447695
outter k backward 509749.919040835707502374169041 with ^ 259844979962.13855818495340496

calculating forward to find the 327310 ~ 
@i 0 @k 509848.919040835707502374169041 with ^ 259945920247.108643655038875045
@i 1 @k 509857.919040835707502374169041 with ^ 259955097608.65137869777391778
@i 2 @k 509866.919040835707502374169041 with ^ 259964275132.194113740508960515
@i 3 @k 509875.919040835707502374169041 with ^ 259973452817.73684878324400325
@i 4 @k 509884.919040835707502374169041 with ^ 259982630665.279583825979045985
@i 5 @k 509893.919040835707502374169041 with ^ 259991808674.82231886871408872
@i 6 @k 509902.919040835707502374169041 with ^ 260000986846.365053911449131455
@i 7 @k 509911.919040835707502374169041 with ^ 260010165179.907788954184174191
@i 8 @k 509920.919040835707502374169041 with ^ 260019343675.450523996919216926
@i 9 @k 509929.919040835707502374169041 with ^ 260028522332.993259039654259661
@i 10 @k 509938.919040835707502374169041 with ^ 260037701152.535994082389302396
outter k forward 509947.919040835707502374169041 with ^ 260046880134.078729125124345131

passing ask_me value [4]1
want fast mode value [10]1
x_me [5] 0
dcm_p [6] 0.01
sh_them [7] 0
optimization
stable value is : 4212
for number x 2147483647 and k = x/81*times :==509848.919040835707502374169041 and result of k*k :== 259945920247.108643655038875045
i diairesi tou 259945920247.108643655038875045 / 2147483647 = 121.046751909030319919841920475 type 1
we get the set of numbers 0.0467519090303199198419204750322 as 121.046751909030319919841920475 and integer part as 121
now we make the magic with 9 * intpart : magik number is : 1089 + 509848.919040835707502374169041 with lst 509848.919040835707502374169041
and the approximation without any fors 509848.919040835707502374169041
stb is bigger new nmb is 509767.919040835707502374169041
dekd [8] 0
starting with 509767.919040835707502374169041
fdrt_ask [9] 0

 ---> exiting internal for with new number 259854155541.681293227688447695
 ---> and last_number 509758.919040835707502374169041
 ---> and fractpart 0.681293227688447694778809697719 with integer part 259854155541
 ---> and dfrt 2147483647 with main number as 2147483647 and main sqrt as 327310

entering function with 0 509749.919040835707502374169041 2147483647 0.01 0

 ------> almost precise value is 509749.919040835707502374169041

